{"version":3,"file":"static/js/58.e64a80e0.chunk.js","mappings":"wNAEO,SAASA,IACd,IAEIC,EAAY,IAAIC,QAQpB,OAPAD,EAAUE,OAAO,SAAUC,EAAAA,GAQzBC,MAXmB,uEAKE,CACvBC,OAAQ,MACRC,SAAU,SACVC,QAASP,IAIJQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,MAAM,GAE/B,C,kKCPO,SAASC,IAGd,OAA0BC,EAAAA,EAAAA,UAAS,CAACC,IAAK,IAAG,eAArCC,EAAK,KAAEC,EAAQ,KACtB,GAA0CH,EAAAA,EAAAA,UAAS,EAAC,mBAAoBI,MAAM,MAAK,gBAAlB,SAAiC,eAA3FC,EAAa,KAAEC,EAAgB,KAEhCC,GAAeC,EAAAA,EAAAA,QAAO,OACtBC,GAAaD,EAAAA,EAAAA,QAAO,OAEpBE,GAAYF,EAAAA,EAAAA,QAAO,GACnBG,GAAUH,EAAAA,EAAAA,QAAO,IAEvBI,EAAAA,EAAAA,YAAU,WACyB,aAiBhC,OAjBgC,0BAAjC,0GACwB3B,EAAAA,EAAAA,KAAc,KAAD,EAA7B4B,EAAO,OAEbC,OAAOC,QAAQF,GAASG,KAAI,SAAAC,GAC1B,IAAMC,EAAWD,EAAM,GAAGE,MAAM,EAAGF,EAAM,GAAGG,QAE5CjB,GAAS,SAACkB,GAAS,yBACdA,GAAS,cACXH,EAAWD,EAAM,IAAE,IAGtBX,GAAiB,SAACe,GAAS,wBACtBA,GAAS,EACZ,mBAAuBjB,MAAOc,EAAS,SAAEA,GAA5BA,IAA8C,GAG/D,IAAG,4CACJ,uBAlBc,WACkB,wBAkBjCI,EACF,GAAG,IAGH,IAAMC,EAAU,WACd,IAAMC,EAAoBjB,EAAakB,QAAQrB,MACzCsB,EAAkBjB,EAAWgB,QAAQrB,MAIrCuB,EAHiBjB,EAAUe,QAAQrB,OAE5BF,EAAMwB,GAAmBxB,EAAMsB,IAG5Cb,EAAQc,QAAQrB,MAAQuB,CAC1B,EAcA,OACE,iCACE,SAACC,EAAA,EAAM,WAAC,uDACR,iBAAKC,UAAU,YAAW,WACxB,eAAIA,UAAU,kBAAiB,iCAC/B,2BAEE,iBAAKA,UAAU,cAAa,WAC1B,gBAAKA,UAAU,mBAAkB,UAC/B,mBAAQC,IAAKvB,EAAcsB,UAAU,cAAcE,SAAUR,EAASS,KAAK,WAAWC,GAAG,eAAc,SACpG5B,OAGL,iBAAKwB,UAAU,gBAAe,WAC5B,kBAAOC,IAAKpB,EAAWmB,UAAU,eAAeE,SAAUR,EAASW,KAAK,SAASD,GAAG,YAAYE,YAAY,MAC5G,mBAAOC,QAAQ,cAAcP,UAAU,aAAY,0BAAetB,EAAaH,aAGjF,mBAAQ8B,KAAK,SAASG,QA9BT,WACrB,IAAMC,EAAe/B,EAAakB,QAAQrB,MAC1CG,EAAakB,QAAQrB,MAASK,EAAWgB,QAAQrB,MACjDK,EAAWgB,QAAQrB,MAAQkC,EAE3Bf,GACF,EAwByDU,GAAG,aAAaJ,UAAU,cAAa,UACpF,iBAAKU,MAAM,6BAA6BV,UAAU,iDAAiDW,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,YAAY,IAAIC,OAAO,eAAeC,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAO,WAC1O,iBAAMH,OAAO,OAAOI,EAAE,gBAAgBH,KAAK,UAC3C,qBAAUI,OAAO,qBACjB,iBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC,qBAAUJ,OAAO,oBACjB,iBAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,aAIpC,iBAAKxB,UAAU,gBAAe,WAC5B,kBAAOC,IAAKnB,EAAS0B,QAjCd,WACjBiB,UAAUC,UAAUC,UAAU7C,EAAQc,QAAQrB,MAChD,EA+BsDqD,UAAQ,EAAC5B,UAAU,eAAeK,KAAK,SAASD,GAAG,UAAUE,YAAY,MACnH,mBAAOC,QAAQ,YAAYP,UAAU,aAAY,wBAAapB,EAAWL,aAE3E,gBAAKyB,UAAU,mBAAkB,UAC/B,mBAAQC,IAAKrB,EAAYoB,UAAU,cAAcE,SAAUR,EAASS,KAAK,WAAWC,GAAG,aAAY,SAChG5B,gBASjB,C","sources":["components/apiResponse.js","pages/Converter.js"],"sourcesContent":["import API_KEYS from '../data/currencyAPI.json';\n\nexport function apiResponse () {\n  const CURRENCY_API = 'https://api.apilayer.com/currency_data/live?base=USD&symbols=EUR,GBP';\n\n  let myHeaders = new Headers();\n  myHeaders.append(\"apikey\", API_KEYS.Converter_APIKEY);\n\n  const requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders\n  }\n  return (\n    fetch(CURRENCY_API, requestOptions)\n      .then(response => response.json())\n      .then(data => data.quotes)\n  );\n};","import React, {\n  useEffect,\n  useState,\n  useRef\n} from 'react';\nimport '../stylesheets/converter.css';\n\nimport { Helmet } from 'react-helmet';\n\nimport { apiResponse } from '../components/apiResponse';\n\nexport function Converter() {\n\n  // Runs the API once when the page is loaded.\n  const [rates, setRates] = useState({USD: 1})\n  const [currencyCodes, setCurrencyCodes] = useState([<option key={'USD'} value='USD'>USD</option>]);\n\n  const currencyFrom = useRef('USD');\n  const currencyTo = useRef('USD');\n\n  const inputFrom = useRef(0);\n  const inputTo = useRef(0);\n\n  useEffect(() => {\n    async function getConversionRates() {\n      const promise = await apiResponse();\n  \n      Object.entries(promise).map(entry => {\n        const currency = entry[0].slice(3, entry[0].length);\n        \n        setRates((prevState) => ({\n          ...prevState,\n          [currency]: entry[1]\n        }));\n        \n        setCurrencyCodes((prevState) => ([\n          ...prevState,\n          <option key={currency} value={currency}>{currency}</option>\n        ]));\n        \n      });\n    };\n    getConversionRates();\n  }, [])\n\n\n  const convert = () => {\n    const currencyFromValue = currencyFrom.current.value;\n    const currencyToValue = currencyTo.current.value;\n    const inputFromValue = inputFrom.current.value;\n\n    const rate = rates[currencyToValue] / rates[currencyFromValue];\n    const result = inputFromValue * rate;\n\n    inputTo.current.value = result;\n  };\n\n  const swapCurrencies = () => {\n    const tempCurrency = currencyFrom.current.value; \n    currencyFrom.current.value =  currencyTo.current.value;\n    currencyTo.current.value = tempCurrency;\n\n    convert();\n  }\n\n  const copyResult = () => {\n    navigator.clipboard.writeText(inputTo.current.value);\n  };\n\n  return (\n    <>\n      <Helmet><title>Converter | Currency</title></Helmet>\n      <div className=\"container\">\n        <h1 className='converter-title'>Currency Converter</h1>\n        <form>\n\n          <div className=\"input-group\">\n            <div className=\"input-group-text\">\n              <select ref={currencyFrom} className=\"form-select\" onChange={convert} name=\"currency\" id=\"currencyFrom\">\n                {currencyCodes}\n              </select>\n            </div>\n            <div className='form-floating'>\n              <input ref={inputFrom} className=\"form-control\" onChange={convert} type=\"number\" id=\"inputFrom\" placeholder=\"\"></input>\n              <label htmlFor=\"convertFrom\" className='form-label'>Convert from {currencyFrom.value}</label>\n            </div>\n\n            <button type='button' onClick={swapCurrencies} id='swapButton' className='form-button'>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-switch-horizontal\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                <polyline points=\"16 3 20 7 16 11\"></polyline>\n                <line x1=\"10\" y1=\"7\" x2=\"20\" y2=\"7\"></line>\n                <polyline points=\"8 13 4 17 8 21\"></polyline>\n                <line x1=\"4\" y1=\"17\" x2=\"13\" y2=\"17\"></line>\n              </svg>\n            </button>\n\n            <div className='form-floating'>\n              <input ref={inputTo} onClick={copyResult} readOnly className=\"form-control\" type=\"number\" id=\"inputTo\" placeholder=\"\"></input>\n              <label htmlFor=\"convertTo\" className='form-label'>Convert to {currencyTo.value}</label>\n            </div>\n            <div className=\"input-group-text\">\n              <select ref={currencyTo} className=\"form-select\" onChange={convert} name=\"currency\" id=\"currencyTo\">\n                {currencyCodes}\n              </select>\n            </div>\n          </div>\n\n        </form>\n      </div>\n    </>\n  );\n}\n"],"names":["apiResponse","myHeaders","Headers","append","API_KEYS","fetch","method","redirect","headers","then","response","json","data","quotes","Converter","useState","USD","rates","setRates","value","currencyCodes","setCurrencyCodes","currencyFrom","useRef","currencyTo","inputFrom","inputTo","useEffect","promise","Object","entries","map","entry","currency","slice","length","prevState","getConversionRates","convert","currencyFromValue","current","currencyToValue","result","Helmet","className","ref","onChange","name","id","type","placeholder","htmlFor","onClick","tempCurrency","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","navigator","clipboard","writeText","readOnly"],"sourceRoot":""}